// <auto-generated />
using System;
using AdmVeterinaria.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdmVeterinaria.Migrations
{
    [DbContext(typeof(TodoContext))]
    partial class TodoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.Animal", b =>
                {
                    b.Property<int>("IdAnimal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnimal"));

                    b.Property<string>("Edad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdDuenio")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoAnimal")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAnimal")
                        .HasName("PK_ID_ANIMAL");

                    b.HasIndex("IdDuenio");

                    b.HasIndex("IdTipoAnimal");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.Atencion", b =>
                {
                    b.Property<int>("IdAtencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAtencion"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAnimal")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAtencion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TratamientoRebicido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAtencion")
                        .HasName("PK_ID_ATENCION");

                    b.HasIndex("IdAnimal");

                    b.ToTable("Atencions");
                });

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.Duenio", b =>
                {
                    b.Property<int>("IdDuenio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDuenio"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDuenio")
                        .HasName("PK_ID_DUENIO");

                    b.ToTable("Duenios");
                });

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.Medicamento", b =>
                {
                    b.Property<int>("IdMedicamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedicamento"));

                    b.Property<int?>("AtencionIdAtencion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMedicamento")
                        .HasName("PK_ID_MEDICAMENTO");

                    b.HasIndex("AtencionIdAtencion");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.TipoAnimal", b =>
                {
                    b.Property<int>("IdTipoAnimal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoAnimal"));

                    b.Property<string>("Tipoanimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoAnimal")
                        .HasName("PK_ID_TIPOANIMAL");

                    b.ToTable("TiposAnimals");
                });

            modelBuilder.Entity("AnimalMedicamento", b =>
                {
                    b.Property<int>("AnimalesIdAnimal")
                        .HasColumnType("int");

                    b.Property<int>("MedicamentosIdMedicamento")
                        .HasColumnType("int");

                    b.HasKey("AnimalesIdAnimal", "MedicamentosIdMedicamento");

                    b.HasIndex("MedicamentosIdMedicamento");

                    b.ToTable("AnimalMedicamento");
                });

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.Animal", b =>
                {
                    b.HasOne("AdmVeterinaria.Datos.Clases.Duenio", "Duenio")
                        .WithMany("Animales")
                        .HasForeignKey("IdDuenio");

                    b.HasOne("AdmVeterinaria.Datos.Clases.TipoAnimal", "TipoAnimal")
                        .WithMany("Animal")
                        .HasForeignKey("IdTipoAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duenio");

                    b.Navigation("TipoAnimal");
                });

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.Atencion", b =>
                {
                    b.HasOne("AdmVeterinaria.Datos.Clases.Animal", "Animal")
                        .WithMany("Atenciones")
                        .HasForeignKey("IdAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.Medicamento", b =>
                {
                    b.HasOne("AdmVeterinaria.Datos.Clases.Atencion", null)
                        .WithMany("Medicamentos")
                        .HasForeignKey("AtencionIdAtencion");
                });

            modelBuilder.Entity("AnimalMedicamento", b =>
                {
                    b.HasOne("AdmVeterinaria.Datos.Clases.Animal", null)
                        .WithMany()
                        .HasForeignKey("AnimalesIdAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdmVeterinaria.Datos.Clases.Medicamento", null)
                        .WithMany()
                        .HasForeignKey("MedicamentosIdMedicamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.Animal", b =>
                {
                    b.Navigation("Atenciones");
                });

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.Atencion", b =>
                {
                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.Duenio", b =>
                {
                    b.Navigation("Animales");
                });

            modelBuilder.Entity("AdmVeterinaria.Datos.Clases.TipoAnimal", b =>
                {
                    b.Navigation("Animal");
                });
#pragma warning restore 612, 618
        }
    }
}
